{"ast":null,"code":"var _jsxFileName = \"/home/camzero/MP/client/src/components/data.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext, useState, useCallback, useEffect } from \"react\";\nimport ContextSocket from \"../context/context-socketio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ComponentLayer() {\n  _s();\n\n  const Socket = useContext(ContextSocket);\n  const [message, setMessage] = useState([]);\n  const onReceiveMessage = useCallback(receivedMessage => {\n    const obj = JSON.parse(receivedMessage);\n    setTimeout(5);\n    const arr = Object.entries(obj).map(e => e.map(value => {\n      if (value[\"light voltage\"] && value.temp) {\n        return [value[\"light voltage\"], value.temp];\n      }\n    }));\n    console.log(arr[0][1], arr[1][1]);\n    const globalArr = [];\n    globalArr.push(arr[0][1]);\n    globalArr.push(arr[1][1]); // console.log(JSON.parse(receivedMessage));\n\n    setMessage(globalArr);\n  }, [setMessage]);\n  useEffect(() => {\n    if (Socket != null) Socket.on(\"sendPic_message\", onReceiveMessage);\n  }, [Socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message.map(e => {\n      `Light Voltage = ${e[0]}\\n\n           Temp = ${e[1]}`;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ComponentLayer, \"8mg8FCwjubLD61l5GlPgWVpK/20=\");\n\n_c = ComponentLayer;\nexport default ComponentLayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentLayer\");","map":{"version":3,"sources":["/home/camzero/MP/client/src/components/data.js"],"names":["React","useContext","useState","useCallback","useEffect","ContextSocket","ComponentLayer","Socket","message","setMessage","onReceiveMessage","receivedMessage","obj","JSON","parse","setTimeout","arr","Object","entries","map","e","value","temp","console","log","globalArr","push","on"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,WAA/B,EAA4CC,SAA5C,QAA6D,OAA7D;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAMC,MAAM,GAAGN,UAAU,CAACI,aAAD,CAAzB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMQ,gBAAgB,GAAGP,WAAW,CACjCQ,eAAD,IAAqB;AACnB,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,eAAX,CAAZ;AACAI,IAAAA,UAAU,CAAC,CAAD,CAAV;AACA,UAAMC,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAeN,GAAf,EAAoBO,GAApB,CAAyBC,CAAD,IAClCA,CAAC,CAACD,GAAF,CAAOE,KAAD,IAAW;AACf,UAAIA,KAAK,CAAC,eAAD,CAAL,IAA0BA,KAAK,CAACC,IAApC,EAA0C;AACxC,eAAO,CAACD,KAAK,CAAC,eAAD,CAAN,EAAyBA,KAAK,CAACC,IAA/B,CAAP;AACD;AACF,KAJD,CADU,CAAZ;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAZ,EAAuBA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAvB;AACA,UAAMS,SAAS,GAAG,EAAlB;AACAA,IAAAA,SAAS,CAACC,IAAV,CAAeV,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAf;AACAS,IAAAA,SAAS,CAACC,IAAV,CAAeV,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAf,EAbmB,CAcnB;;AACAP,IAAAA,UAAU,CAACgB,SAAD,CAAV;AACD,GAjBiC,EAkBlC,CAAChB,UAAD,CAlBkC,CAApC;AAqBAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,MAAM,IAAI,IAAd,EAAoBA,MAAM,CAACoB,EAAP,CAAU,iBAAV,EAA6BjB,gBAA7B;AACrB,GAFQ,EAEN,CAACH,MAAD,CAFM,CAAT;AAIA,sBACE;AAAA,cACGC,OAAO,CAACW,GAAR,CAAaC,CAAD,IAAO;AACjB,yBAAkBA,CAAC,CAAC,CAAD,CAAI;AAChC,oBAAoBA,CAAC,CAAC,CAAD,CAAI,EADjB;AAED,KAHA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GApCQd,c;;KAAAA,c;AAsCT,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { useContext, useState, useCallback, useEffect } from \"react\";\nimport ContextSocket from \"../context/context-socketio\";\n\nfunction ComponentLayer() {\n  const Socket = useContext(ContextSocket);\n  const [message, setMessage] = useState([]);\n  const onReceiveMessage = useCallback(\n    (receivedMessage) => {\n      const obj = JSON.parse(receivedMessage);\n      setTimeout(5);\n      const arr = Object.entries(obj).map((e) =>\n        e.map((value) => {\n          if (value[\"light voltage\"] && value.temp) {\n            return [value[\"light voltage\"], value.temp];\n          }\n        })\n      );\n      console.log(arr[0][1], arr[1][1]);\n      const globalArr = [];\n      globalArr.push(arr[0][1]);\n      globalArr.push(arr[1][1]);\n      // console.log(JSON.parse(receivedMessage));\n      setMessage(globalArr);\n    },\n    [setMessage]\n  );\n\n  useEffect(() => {\n    if (Socket != null) Socket.on(\"sendPic_message\", onReceiveMessage);\n  }, [Socket]);\n\n  return (\n    <div>\n      {message.map((e) => {\n        `Light Voltage = ${e[0]}\\n\n           Temp = ${e[1]}`;\n      })}\n    </div>\n  );\n}\n\nexport default ComponentLayer;\n"]},"metadata":{},"sourceType":"module"}